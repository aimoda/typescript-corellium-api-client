/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * OpenAPI spec version: 5.4.1-18421
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AuthProvider } from '../models/AuthProvider';
import { ConfigResponseMaintenance } from '../models/ConfigResponseMaintenance';
import { Logging } from '../models/Logging';
import { Trial } from '../models/Trial';
import { HttpFile } from '../http/http';

/**
* 
*/
export class ConfigResponse {
    /**
    * Denotes whether it\'s an on-site install
    */
    'onSite'?: boolean | null;
    /**
    * Denotes whether to show domain settings
    */
    'showDomainSettings'?: boolean | null;
    /**
    * Denotes the version
    */
    'version'?: string | null;
    /**
    * Denotes whether the build is invalid
    */
    'invalidBuild'?: boolean | null;
    /**
    * Denotes whether sepSim is enabled
    */
    'sepSim'?: boolean | null;
    /**
    * Denotes whether installer is available
    */
    'installerAvailable'?: boolean | null;
    /**
    * API publishable key to use for Invoiced
    */
    'invoicedPublishableKey'?: string | null;
    /**
    * Stripe public key
    */
    'stripePublicKey'?: string | null;
    /**
    * Intercom app ID, also known as workspace ID
    */
    'intercomId'?: string | null;
    /**
    * Webhook URL for aux
    */
    'auxWebhook'?: string | null;
    /**
    * Google Tag Manager
    */
    'gtmId'?: string | null;
    /**
    * Webhook URL to send feedback into Productboard automatically
    */
    'zapierFeedbackWebhook'?: string | null;
    /**
    * Webhook URL to send frontend errors to Jira automatically
    */
    'zapierBugsWebhook'?: string | null;
    /**
    * Default backend billing api name for new subscriptions (e.g. \"stripe\")
    */
    'billingBackend'?: string | null;
    'maintenance'?: ConfigResponseMaintenance | null;
    'logging'?: Logging;
    /**
    * URL for cloud admin login
    */
    'cloudAdmin'?: string | null;
    /**
    * URL for files admin login
    */
    'filesAdmin'?: string | null;
    /**
    * Cloud domain name (usually corellium.com or staging.corellium.com)
    */
    'cloudDomain'?: string | null;
    /**
    * Billing domain name
    */
    'billingDomain'?: string | null;
    /**
    * App domain name (usually app.corellium.com or app.staging.corellium.com)
    */
    'appDomain'?: string | null;
    /**
    * Maximum network monitor file size
    */
    'maxNetworkMonitorFileSize'?: string | null;
    /**
    * Denotes whether users can upload firmware images
    */
    'enableFirmwareImageUpload'?: boolean | null;
    /**
    * Auth providers
    */
    'authProviders'?: Array<AuthProvider> | null;
    /**
    * Maximum number of snapshots to allow
    */
    'snapshotLimit'?: number | null;
    /**
    * The maximum size, in bytes, (default: 100 MB) that an uploaded kernel should be
    */
    'maxKernelSize'?: number | null;
    /**
    * The maximum size, in bytes, (default: 500 MB) that an uploaded ramdisk should be
    */
    'maxRamdiskSize'?: number | null;
    /**
    * Denotes whether charmSDK is enabled
    */
    'charmSDK'?: string | null;
    'trial'?: Trial;
    /**
    * Sentry URL
    */
    'sentryUrl'?: string | null;
    /**
    * If enabled, adds the default providers in their current configuration
    */
    'domainAuthenticationProviders'?: boolean | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "onSite",
            "baseName": "onSite",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "showDomainSettings",
            "baseName": "showDomainSettings",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "invalidBuild",
            "baseName": "invalidBuild",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sepSim",
            "baseName": "sepSim",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "installerAvailable",
            "baseName": "installerAvailable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "invoicedPublishableKey",
            "baseName": "invoicedPublishableKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "stripePublicKey",
            "baseName": "stripePublicKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "intercomId",
            "baseName": "intercomId",
            "type": "string",
            "format": ""
        },
        {
            "name": "auxWebhook",
            "baseName": "auxWebhook",
            "type": "string",
            "format": ""
        },
        {
            "name": "gtmId",
            "baseName": "gtmId",
            "type": "string",
            "format": ""
        },
        {
            "name": "zapierFeedbackWebhook",
            "baseName": "zapierFeedbackWebhook",
            "type": "string",
            "format": ""
        },
        {
            "name": "zapierBugsWebhook",
            "baseName": "zapierBugsWebhook",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingBackend",
            "baseName": "billingBackend",
            "type": "string",
            "format": ""
        },
        {
            "name": "maintenance",
            "baseName": "maintenance",
            "type": "ConfigResponseMaintenance",
            "format": ""
        },
        {
            "name": "logging",
            "baseName": "logging",
            "type": "Logging",
            "format": ""
        },
        {
            "name": "cloudAdmin",
            "baseName": "cloudAdmin",
            "type": "string",
            "format": ""
        },
        {
            "name": "filesAdmin",
            "baseName": "filesAdmin",
            "type": "string",
            "format": ""
        },
        {
            "name": "cloudDomain",
            "baseName": "cloudDomain",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingDomain",
            "baseName": "billingDomain",
            "type": "string",
            "format": ""
        },
        {
            "name": "appDomain",
            "baseName": "appDomain",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxNetworkMonitorFileSize",
            "baseName": "maxNetworkMonitorFileSize",
            "type": "string",
            "format": ""
        },
        {
            "name": "enableFirmwareImageUpload",
            "baseName": "enableFirmwareImageUpload",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "authProviders",
            "baseName": "authProviders",
            "type": "Array<AuthProvider>",
            "format": ""
        },
        {
            "name": "snapshotLimit",
            "baseName": "snapshotLimit",
            "type": "number",
            "format": ""
        },
        {
            "name": "maxKernelSize",
            "baseName": "maxKernelSize",
            "type": "number",
            "format": ""
        },
        {
            "name": "maxRamdiskSize",
            "baseName": "maxRamdiskSize",
            "type": "number",
            "format": ""
        },
        {
            "name": "charmSDK",
            "baseName": "charmSDK",
            "type": "string",
            "format": ""
        },
        {
            "name": "trial",
            "baseName": "trial",
            "type": "Trial",
            "format": ""
        },
        {
            "name": "sentryUrl",
            "baseName": "sentryUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "domainAuthenticationProviders",
            "baseName": "domainAuthenticationProviders",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ConfigResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

