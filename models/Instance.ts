/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * OpenAPI spec version: 5.7.1-19698
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CreatedBy } from '../models/CreatedBy';
import { InstanceAgentState } from '../models/InstanceAgentState';
import { InstanceBootOptions } from '../models/InstanceBootOptions';
import { InstanceNetdumpState } from '../models/InstanceNetdumpState';
import { InstanceNetmonState } from '../models/InstanceNetmonState';
import { InstanceServices } from '../models/InstanceServices';
import { InstanceState } from '../models/InstanceState';
import { HttpFile } from '../http/http';

/**
* 
*/
export class Instance {
    /**
    * Instance Identifier
    */
    'id'?: string | null;
    /**
    * Instance Name
    */
    'name'?: string | null;
    /**
    * Key used to encrypt the Instance
    */
    'key'?: string | null;
    /**
    * The type of virtual machine this is
    */
    'flavor'?: string | null;
    /**
    * 
    */
    'type'?: string | null;
    /**
    * The projectId of the project this instance belongs to
    */
    'project'?: string | null;
    'state'?: InstanceState;
    /**
    * Time the state of the instance last changed
    */
    'stateChanged'?: Date | null;
    /**
    * Time the instance was started
    */
    'startedAt'?: string | null;
    /**
    * Currently executing User Task
    */
    'userTask'?: string | null;
    /**
    * Current task state if any
    */
    'taskState'?: string | null;
    /**
    * Current error state if any
    */
    'error'?: string | null;
    'bootOptions'?: InstanceBootOptions;
    /**
    * Services IP Address
    */
    'serviceIp'?: string | null;
    /**
    * LAN IP Address
    */
    'wifiIp'?: string | null;
    /**
    * Secondary Inteface LAN IP Address (if supported)
    */
    'secondaryIp'?: string | null;
    'services'?: InstanceServices;
    /**
    * 
    */
    'panicked'?: boolean | null;
    /**
    * Time instance was created
    */
    'created'?: Date | null;
    /**
    * Model of virtual machine device
    */
    'model'?: string | null;
    /**
    * URL that package used to create this instance is available at
    */
    'fwpackage'?: string | null;
    /**
    * 
    */
    'os'?: string | null;
    'agent'?: InstanceAgentState | null;
    'netmon'?: InstanceNetmonState;
    'netdump'?: InstanceNetdumpState;
    /**
    * 
    */
    'exposePort'?: string | null;
    /**
    * 
    */
    'fault'?: boolean | null;
    /**
    * 
    */
    'patches'?: Array<string> | null;
    'createdBy'?: CreatedBy;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "flavor",
            "baseName": "flavor",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "project",
            "baseName": "project",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "InstanceState",
            "format": ""
        },
        {
            "name": "stateChanged",
            "baseName": "stateChanged",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "startedAt",
            "baseName": "startedAt",
            "type": "string",
            "format": "date-time, NULL if currently SHUTOFF"
        },
        {
            "name": "userTask",
            "baseName": "userTask",
            "type": "string",
            "format": ""
        },
        {
            "name": "taskState",
            "baseName": "taskState",
            "type": "string",
            "format": ""
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string",
            "format": ""
        },
        {
            "name": "bootOptions",
            "baseName": "bootOptions",
            "type": "InstanceBootOptions",
            "format": ""
        },
        {
            "name": "serviceIp",
            "baseName": "serviceIp",
            "type": "string",
            "format": "ipv4"
        },
        {
            "name": "wifiIp",
            "baseName": "wifiIp",
            "type": "string",
            "format": "ipv4"
        },
        {
            "name": "secondaryIp",
            "baseName": "secondaryIp",
            "type": "string",
            "format": "ipv4"
        },
        {
            "name": "services",
            "baseName": "services",
            "type": "InstanceServices",
            "format": ""
        },
        {
            "name": "panicked",
            "baseName": "panicked",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "model",
            "baseName": "model",
            "type": "string",
            "format": ""
        },
        {
            "name": "fwpackage",
            "baseName": "fwpackage",
            "type": "string",
            "format": "url"
        },
        {
            "name": "os",
            "baseName": "os",
            "type": "string",
            "format": ""
        },
        {
            "name": "agent",
            "baseName": "agent",
            "type": "InstanceAgentState",
            "format": ""
        },
        {
            "name": "netmon",
            "baseName": "netmon",
            "type": "InstanceNetmonState",
            "format": ""
        },
        {
            "name": "netdump",
            "baseName": "netdump",
            "type": "InstanceNetdumpState",
            "format": ""
        },
        {
            "name": "exposePort",
            "baseName": "exposePort",
            "type": "string",
            "format": ""
        },
        {
            "name": "fault",
            "baseName": "fault",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "patches",
            "baseName": "patches",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "CreatedBy",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Instance.attributeTypeMap;
    }

    public constructor() {
    }
}



